import { Component, ContentChild, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/expansion";
import * as i2 from "@angular/common";
export class AccordionComponent {
    constructor() {
        this.panelOpenState = false;
        this.customClass = 'main-accordion';
    }
    ngOnInit() {
    }
}
AccordionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: AccordionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AccordionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: AccordionComponent, selector: "igy-accordion", inputs: { customClass: "customClass", datas: "datas" }, queries: [{ propertyName: "titleTemplateRef", first: true, predicate: ["title"], descendants: true }, { propertyName: "descriptionTemplateRef", first: true, predicate: ["description"], descendants: true }, { propertyName: "contentTemplateRef", first: true, predicate: ["content"], descendants: true }], ngImport: i0, template: "<mat-accordion [ngClass]=\"customClass\">\r\n  <mat-expansion-panel *ngFor=\"let rowData of datas\" (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        {{rowData.title}}\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        {{rowData.description}}\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <ng-container *ngIf=\"contentTemplateRef\" [ngTemplateOutlet]=\"contentTemplateRef\" [ngTemplateOutletContext]=\"{$implicit:rowData}\"></ng-container>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n", styles: [".mat-accordion .mat-expansion-panel{margin-bottom:15px}.mat-accordion .mat-expansion-panel-header-title{font-weight:500}.mat-accordion .mat-expansion-panel-header-description{justify-content:flex-end}\n"], components: [{ type: i1.MatExpansionPanel, selector: "mat-expansion-panel", inputs: ["disabled", "expanded", "hideToggle", "togglePosition"], outputs: ["opened", "closed", "expandedChange", "afterExpand", "afterCollapse"], exportAs: ["matExpansionPanel"] }, { type: i1.MatExpansionPanelHeader, selector: "mat-expansion-panel-header", inputs: ["tabIndex", "expandedHeight", "collapsedHeight"] }], directives: [{ type: i1.MatAccordion, selector: "mat-accordion", inputs: ["multi", "hideToggle", "displayMode", "togglePosition"], exportAs: ["matAccordion"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.MatExpansionPanelTitle, selector: "mat-panel-title" }, { type: i1.MatExpansionPanelDescription, selector: "mat-panel-description" }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: AccordionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'igy-accordion', template: "<mat-accordion [ngClass]=\"customClass\">\r\n  <mat-expansion-panel *ngFor=\"let rowData of datas\" (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        {{rowData.title}}\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        {{rowData.description}}\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <ng-container *ngIf=\"contentTemplateRef\" [ngTemplateOutlet]=\"contentTemplateRef\" [ngTemplateOutletContext]=\"{$implicit:rowData}\"></ng-container>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n", styles: [".mat-accordion .mat-expansion-panel{margin-bottom:15px}.mat-accordion .mat-expansion-panel-header-title{font-weight:500}.mat-accordion .mat-expansion-panel-header-description{justify-content:flex-end}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { customClass: [{
                type: Input
            }], datas: [{
                type: Input
            }], titleTemplateRef: [{
                type: ContentChild,
                args: ['title', { static: false }]
            }], descriptionTemplateRef: [{
                type: ContentChild,
                args: ['description', { static: false }]
            }], contentTemplateRef: [{
                type: ContentChild,
                args: ['content', { static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lneS10ZW1wbGF0ZXMtbW9kdWxlcy9zcmMvbGliL2NvbXBvc2FudHMvYWNjb3JkaW9uL2FjY29yZGlvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ3ktdGVtcGxhdGVzLW1vZHVsZXMvc3JjL2xpYi9jb21wb3NhbnRzL2FjY29yZGlvbi9hY2NvcmRpb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUF1QixNQUFNLGVBQWUsQ0FBQzs7OztBQU9wRixNQUFNLE9BQU8sa0JBQWtCO0lBTTdCO1FBTEEsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFFZCxnQkFBVyxHQUFXLGdCQUFnQixDQUFDO0lBR2hDLENBQUM7SUFNakIsUUFBUTtJQUNSLENBQUM7O2dIQWJVLGtCQUFrQjtvR0FBbEIsa0JBQWtCLDRaQ1AvQixrb0JBYUE7NEZETmEsa0JBQWtCO2tCQUw5QixTQUFTOytCQUNFLGVBQWU7MEVBT2hCLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUlpQyxnQkFBZ0I7c0JBQXRELFlBQVk7dUJBQUMsT0FBTyxFQUFDLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBQztnQkFDUSxzQkFBc0I7c0JBQWxFLFlBQVk7dUJBQUMsYUFBYSxFQUFDLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBQztnQkFDRixrQkFBa0I7c0JBQTFELFlBQVk7dUJBQUMsU0FBUyxFQUFDLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkLCBJbnB1dCwgT25Jbml0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdpZ3ktYWNjb3JkaW9uJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYWNjb3JkaW9uLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hY2NvcmRpb24uY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQWNjb3JkaW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBwYW5lbE9wZW5TdGF0ZSA9IGZhbHNlO1xyXG5cclxuICBASW5wdXQoKSBjdXN0b21DbGFzczogc3RyaW5nID0gJ21haW4tYWNjb3JkaW9uJztcclxuICBASW5wdXQoKSBkYXRhcyA6YW55O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBAQ29udGVudENoaWxkKCd0aXRsZScse3N0YXRpYzogZmFsc2V9KSB0aXRsZVRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+IHwgdW5kZWZpbmVkO1xyXG4gIEBDb250ZW50Q2hpbGQoJ2Rlc2NyaXB0aW9uJyx7c3RhdGljOiBmYWxzZX0pIGRlc2NyaXB0aW9uVGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4gfCB1bmRlZmluZWQ7XHJcbiAgQENvbnRlbnRDaGlsZCgnY29udGVudCcse3N0YXRpYzogZmFsc2V9KSBjb250ZW50VGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4gfCB1bmRlZmluZWQ7XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gIH1cclxuXHJcbn1cclxuIiwiPG1hdC1hY2NvcmRpb24gW25nQ2xhc3NdPVwiY3VzdG9tQ2xhc3NcIj5cclxuICA8bWF0LWV4cGFuc2lvbi1wYW5lbCAqbmdGb3I9XCJsZXQgcm93RGF0YSBvZiBkYXRhc1wiIChvcGVuZWQpPVwicGFuZWxPcGVuU3RhdGUgPSB0cnVlXCIgKGNsb3NlZCk9XCJwYW5lbE9wZW5TdGF0ZSA9IGZhbHNlXCI+XHJcbiAgICA8bWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXI+XHJcbiAgICAgIDxtYXQtcGFuZWwtdGl0bGU+XHJcbiAgICAgICAge3tyb3dEYXRhLnRpdGxlfX1cclxuICAgICAgPC9tYXQtcGFuZWwtdGl0bGU+XHJcbiAgICAgIDxtYXQtcGFuZWwtZGVzY3JpcHRpb24+XHJcbiAgICAgICAge3tyb3dEYXRhLmRlc2NyaXB0aW9ufX1cclxuICAgICAgPC9tYXQtcGFuZWwtZGVzY3JpcHRpb24+XHJcbiAgICA8L21hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyPlxyXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImNvbnRlbnRUZW1wbGF0ZVJlZlwiIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImNvbnRlbnRUZW1wbGF0ZVJlZlwiIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7JGltcGxpY2l0OnJvd0RhdGF9XCI+PC9uZy1jb250YWluZXI+XHJcbiAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsPlxyXG48L21hdC1hY2NvcmRpb24+XHJcbiJdfQ==